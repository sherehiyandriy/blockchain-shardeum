diff --git a/src/config/index.ts b/src/config/index.ts
index b993b08..bd2cd92 100644
--- a/src/config/index.ts
+++ b/src/config/index.ts
@@ -126,14 +126,14 @@ config = merge(config, {
     p2p: {
       cycleDuration: 60,
       minNodesToAllowTxs: 1, // to allow single node networks
-      baselineNodes: process.env.baselineNodes ? parseInt(process.env.baselineNodes) : 300, // config used for baseline for entering recovery, restore, and safety. Should be equivalient to minNodes on network startup
-      minNodes: process.env.minNodes ? parseInt(process.env.minNodes) : 300,
-      maxNodes: process.env.maxNodes ? parseInt(process.env.maxNodes) : 1100,
+      baselineNodes: process.env.baselineNodes ? parseInt(process.env.baselineNodes) : 1000, // config used for baseline for entering recovery, restore, and safety. Should be equivalient to minNodes on network startup
+      minNodes: process.env.minNodes ? parseInt(process.env.minNodes) : 1000,
+      maxNodes: process.env.maxNodes ? parseInt(process.env.maxNodes) : 1500,
       maxJoinedPerCycle: 10,
       maxSyncingPerCycle: 10,
       maxRotatedPerCycle: process.env.maxRotatedPerCycle ? parseInt(process.env.maxRotatedPerCycle) : 1,
       firstCycleJoin: 0,
-      maxSyncTimeFloor: 1200, //Using 6000 for a restore from archiver, then set config at runtime back to 1200
+      maxSyncTimeFloor: 12000, //Using 6000 for a restore from archiver, then set config at runtime back to 1200
       //  1200=20 minutes.  If the network lives a long time we may have to bump this up
       syncBoostEnabled: false,
       amountToGrow: 30,
@@ -189,7 +189,7 @@
       standbyListCyclesTTL: 1440, //nodes only need to refresh once every 24 hours (which is 1440 60s cycles!)

       // 1.10.1
-      extraNodesToAddInRestart: 5, //how many extra nodes to we add in restart phase so we dont get stuck in restore phase
+      extraNodesToAddInRestart: 20, //how many extra nodes to we add in restart phase so we dont get stuck in restore phase
       // 1.10.1
       cyclesToWaitForSyncStarted: 5, //raising this to 5 to reduce the chance of nodes getting booted out too soon

@@ -200,8 +200,8 @@
       removeLostSyncingNodeFromList: true,

       //1.11.0
-      rotationEdgeToAvoid: 2,
-      allowActivePerCycle: 1,
+      rotationEdgeToAvoid: 8,
+      allowActivePerCycle: 4,

       maxStandbyCount: 30000, //max allowed standby nodes count
       enableMaxStandbyCount: true,
@@ -246,7 +246,7 @@
     sharding: {
       nodesPerConsensusGroup: process.env.nodesPerConsensusGroup
         ? parseInt(process.env.nodesPerConsensusGroup)
-        : 10, //128 is the final goal
+        : 128, //128 is the final goal
       nodesPerEdge: process.env.nodesPerEdge ? parseInt(process.env.nodesPerEdge) : 5,
       executeInOneShard: true,
     },
